/* /* guide lines 

--- SHADOWS
    
--- FONT SIZE SYSTEM (rem)
  1 / 1.2 / 1.4 / 1.6 / 1.8 / 2 / 2.4 / 3 / 3.6 / 4.4 / 5.2 / 6.2 / 7.4 / 8.6 / 9.8
    
--- WIGHT SPACE(PX)
  2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
    
--- LINE HEIGHT SYSTEM
  2.8 , 3.2 , 5.6 , 8.8 

--- FONT WEIGHT SYSTEM 
  500 700

*/

/* /* css reset */
/* to make variables */
:root {
  /* background image */
  --background-image-desktop: url(../images/bg-desktop-light.jpg);
  --background-image-mobile: url(../images/bg-mobile-light.jpg);

  /* Primary */
  --main: hsl(220, 98%, 61%);
  --linear-gradient: linear-gradient(
    to right bottom,
    hsl(192, 100%, 67%),
    hsl(280, 87%, 65%)
  );

  /* both theam colors */
  --body-background: hsl(0, 0%, 98%);
  --task-background: hsl(0, 0%, 98%);
  --text-color: hsl(235, 19%, 35%);
  --text-color-light: hsl(236, 9%, 61%);
  --task-underline-color: hsl(255, 8%, 91%);

  /* box shadow */
  --shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.1);

  /* transition */
  --transition: color 0.3s ease-in-out,
    background-color 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

/*
 Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* to reset the page */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;

  box-sizing: border-box;

  transition: var(--transition);
}
html,
body {
  height: 100%;
}
html {
  /* to set the base font size  */
  font-size: 62.5%;
}
body {
  position: relative;

  font-family: "Josefin Sans", sans-serif;
  font-weight: 400;
  font-size: 1.8rem;

  line-height: 1.2;

  -webkit-font-smoothing: antialiased;

  background: var(--body-background);
  color: var(--text-color);
}

/* image background */
body::before {
  content: "";

  background-image: var(--background-image-desktop);
  background-repeat: no-repeat;
  background-size: contain;

  position: absolute;

  z-index: -1;

  top: 0;
  left: 0;
  right: 0;

  min-height: 100vh;
}

/* typography */
/*
  Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

h1 {
  font-weight: 700;
}

h1 {
  color: hsl(0, 0%, 98%);

  font-size: 4.2rem;
  line-height: 4.2rem;
  letter-spacing: 1.4rem;
}

/* reseting lists  */
ol,
ul {
  list-style: none;
}

/* reseting qouote and qouoteblock  */
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

/*
  Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/* visual content */
/*
  Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* styling */

/* main container */
.container {
  margin: 0 auto;
  padding: 8rem 2rem;

  width: 100%;
  max-width: 75rem;
}

/* header */
header {
  margin-bottom: 4.8rem;

  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* inputing task form styling */
.task-in {
  margin-bottom: 3.2rem;
  padding: 1.4rem 1.8rem;

  display: flex;
  align-items: center;
  gap: 2.4rem;

  background-color: var(--task-background);

  border-radius: 9px;

  box-shadow: var(--shadow);
}

/* input submit button */
.task-submit {
  width: 25px;
  height: 25px;

  background-color: transparent;

  border-radius: 100rem;
  border: 2px solid var(--task-underline-color);
}

/* input  */
.task-input {
  flex: 1;

  background-color: transparent;
  color: var(--text-color);

  border: none;
}
.task-input::placeholder {
  color: var(--text-color-light);
}
.task-input:focus {
  outline: none;
}

/* list styling */
.list {
  background-color: var(--task-background);

  box-shadow: var(--shadow);

  border-radius: 9px;

  overflow: hidden;
}

/* the div that holds all the elements in the li element */
.draggable-container,
.list-settings {
  padding: 1.4rem 1.8rem;

  display: flex;
  align-items: center;
  gap: 2.4rem;
}
.draggable-container {
  border-bottom: 1.25px solid var(--task-underline-color);
}
.draggable-container:hover .task-delete {
  opacity: 1;
  pointer-events: all;
}

/* task styling */
/* styling the check box and it sibleng elements */
.task-checkbox {
  display: none;
}
.draggable-container:has(.task-checkbox:checked) .task-text {
  color: var(--text-color-light);
  text-decoration: line-through;
}
.task-checkbox:checked ~ .task-checkbox-style {
  background: var(--linear-gradient);
}
.task-checkbox:checked ~ .task-checkbox-style::before {
  content: url(../images/icon-check.svg);
  background: var(--linear-gradient);
}

.task-checkbox-style {
  padding: 0.2rem;

  position: relative;

  width: 25px;
  height: 25px;

  background: var(--task-underline-color);

  border-radius: 100rem;
}

.task-checkbox-style:hover {
  background: var(--linear-gradient);
}

.task-checkbox-style::before {
  content: "";

  display: flex;
  align-items: center;
  justify-content: center;

  width: 100%;
  height: 100%;

  background-color: var(--task-background);

  border-radius: 100rem;
}

/* task text styling */
.task-text {
  flex: 1;
}

/* task delete button styling */
.task-delete {
  opacity: 0;
  pointer-events: none;

  transition: var(--transition);
}

/* settings styling */
.list-settings {
  justify-content: space-between;
}
/* settings link element */
.list-settings * {
  color: var(--text-color-light);
  text-decoration: none;

  transition: var(--transition);
}
.list-settings a:hover {
  color: var(--text-color);
}

/* settings inner container */
.settings {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1.6rem;
}
/* setting active state */
.settings-active {
  color: var(--main);
}

/* to hide task */
.hide-tsk {
  display: none;
}
